<?xml version='1.0' ?><!-- great emacs, please load -*- nxml -*- mode -->
<!-- MyQttD default configuration -->
<myqtt>

  <global-settings>
    <!-- port allocation configuration -->
    <ports>
      <!-- <port [bind-addr='0.0.0.0'] [proto='mqtt']>__port_num__</port> -->
      <port proto="mqtt-wss">1191</port> <!-- port for MQTT over TLS WebSocket -->
      <port proto="mqtt-ws">1181</port> <!-- port for MQTT over WebSocket -->
    </ports>

    <!-- log reporting configuration -->
    <log-reporting enabled="yes" use-syslog="yes">
      <general-log file="/var/log/myqtt/main.log" />
      <error-log  file="/var/log/myqtt/error.log" />
      <access-log file="/var/log/myqtt/access.log" />
      <myqtt-log file="/var/log/myqtt/myqtt.log" />
    </log-reporting>

    <!-- crash settings 
       [*] hold:   lock the current instance so a developer can attach to the
                   process  to debug what's happening.

       [*] ignore: just ignore the signal, and try to keep running.

       [*] quit,exit: terminates myqtt execution.

       [*] backtrace: allows to produce a backtrace located on a
       file. 

       All these values can be combined with mail-to to send a report.
     -->
    <on-bad-signal action="hold" mail-to="default"/>

    <connections>
      <!-- Max allowed connections to handle at the same time. Getting
	   higher than 1024 will require especial permission. 

           Keep in mind that myqtt and myqtt itself requires at
           least 12 descriptors for its proper function.  -->
      <max-connections hard-limit="512" soft-limit="512"/>
    </connections>

    <!-- in the case myqtt create child process to manage incoming connections, 
	 what to do with child process in myqtt main process exits. By default killing childs
	 will cause clean myqtt stop. However killing childs will cause running 
	 connections (handled by childs) to be closed. -->
    <kill-childs-on-exit value="yes" />

    <!-- general smtp servers and accounts that will be used to
         produce notifications. The account declaration <smtp-server>
         with is-default="yes" will be used as default system
         notification. -->
    <notify-failures>
      <smtp-server id="default" server="localhost" port="25" mail-from="myqtt@example.com" mail-to="test@example.com" is-default="yes"/>
    </notify-failures>

    <!-- Self explanatory: this control max child limit that can
         create the master myqtt process. This value applies to
         all profile path's children, considering the sum together -->
    <global-child-limit value="100" />

    <!-- Default TCP backlog (listen() call) to be configured for
         myqtt context used by this myqtt -->
    <server-backlog value="50" />

    <!-- Max incoming frame size limit for channels having complete
         flag enabled (see myqtt function
         myqtt_channel_set_complete_flag).  Value is experesed in bytes -->
    <max-incoming-complete-msg-limit value="32768" />

    <!-- Allows to configure how will behave thread pool associated to
         the myqtt context used by myqtt. See
         myqtt_thread_pool_setup for more info. 

	 Max limit value allows to control upper limit for the thread
	 pool when load peaks.
	 
	 Step period, allows to control what's the reference period to
	 use when load peaks, adding more threads as configured by
	 step-add.
	 
	 Once the peak lows, threads added to the pool are removed
	 until the base number is reached (which is usually 5).
    -->
    <thread-pool max-limit="40" step-period="5" step-add="1" />

    <running-user uid="myqttd" gid="myqttd" />

    <system-paths>
      <!-- override runtime-datadir configuration: by default /var/lib -->
      <!-- <path name="runtime_datadir" value="/var/lib" /> -->

      <!-- override runtime-datadir configuration: by default /etc -->
      <path name="sysconfdir" value="test_11" /> 

      <!-- override datadir configuration: by default /usr/share -->
      <!-- <path name="datadir" value="/usr/share" /> -->
    </system-paths>

  </global-settings>

  <modules>
    
    <!-- directory where to find modules to load -->
    <directory src="reg-test-01/modules" /> 
    <!-- alternative directory -->
    <!-- <directory src="../mods-enabled" />  -->
    <no-load>
      <!-- signal modules to be not loaded even being available the
           directories configured. The name configured can be the name
           that is reporting the module or the module file name, like
           mod_skipped (don't add .so). The difference is that
           providing the file name will module from the loaded into
           memory while providing a name will cause the module to be
           loaded and then checked its name. -->
      <module name="mod-skipped" />
    </no-load>
  </modules>

  <!-- the following allows to group configuration settings into
       groups that then can be applied to domains. Each configuration
       setting is identified by a <domain-setting> node. Then, the
       node <global-settings> includes global settings that are
       configured to all domain-setting nodes unless they say
       something about. -->
  <domain-settings>
      <global-settings>
          <!-- require authentication: yes, so valid username/password is
	       required, no: anonymous connection is allowed -->
	  <require-auth value="yes" />
	  <!-- force clients to have a registered id recognized by the
	       database: yes (restrict), no (allow using any client id)
	  -->
	  <restrict-ids value="yes" />
	  <!-- disconnect previous connection if a new connection with
	       same client_id is received. According to MQTT standard
	       ([MQTT-3.1.4-2], page 12, section 3.1.4 response, it
	       states that by default the server must disconnect
	       previous connection in the case same client id is
	       found. However, this may pose a security flaw. By
	       default this is disabled. If nothing is configured, by
	       default is disabled. To drop current connection,
	       replacing it with new incoming connection with same id,
	       use value="yes" -->
	  <drop-conn-same-client-id value="no" />
      </global-settings>

      <!-- now group of settings -->
      <!-- settings for basic domains -->
      <domain-setting name="basic">
	<conn-limit value="5" /> <!-- amount of concurrent connections -->
	<message-size-limit value="256" /> <!-- 32k max message size allowed, use -1 for no limits (256MB) -->
	<storage-messages-limit value="10000" /> <!-- max amount of messages in storage, use -1 for no limits -->
	<storage-quota-limit value="102400" /> <!-- max amount of space used (100MB) -->
      </domain-setting>
      
      <!-- settings for standard domains -->
      <domain-setting name="standard">
      	<conn-limit value="10" /> <!-- amount of concurrent connections -->
	<message-size-limit value="65536" /> <!-- 32k max message size allowed, use -1 for no limits (256MB) -->
	<storage-messages-limit value="20000" /> <!-- max amount of messages in storage, use -1 for no limits -->
	<storage-quota-limit value="204800" /> <!-- max amount of space used (200MB), value in KB -->
      </domain-setting>

      <!-- settings for standard domains -->
      <domain-setting name="small-quota">
      	<conn-limit value="10" /> <!-- amount of concurrent connections -->
	<message-size-limit value="65536" /> <!-- 32k max message size allowed, use -1 for no limits (256MB) -->
	<storage-messages-limit value="20" /> <!-- max amount of messages in storage, use -1 for no limits -->
	<storage-quota-limit value="20" /> <!-- max amount of space used (20KB), value in KB -->
      </domain-setting>
  </domain-settings>

  <!-- myqtt domains: list of group of myqtt users/devices we accept
       for this server and how they are groupped and assigned to an
       specific running user -->
  <myqtt-domains>

    <!-- simple declaration for a domain with a set of users
         (users-db) and where it is storing messages in transit
         (storage) -->
    <domain name="test_01.context"  storage="reg-test-01/storage" users-db="reg-test-01/users" use-settings="basic" />

    <!-- simple declaration for a domain with a set of users
         (users-db) and where it is storing messages in transit
         (storage) -->
    <domain name="test_02.context" storage="reg-test-02/storage" users-db="reg-test-02/users" use-settings="standard" />

    <!-- simple declaration for a domain with a set of users
         (users-db) and where it is storing messages in transit
         (storage) -->
    <domain name="test_03.context" storage="reg-test-03/storage" users-db="reg-test-03/users" use-settings="small-quota" />

  </myqtt-domains>
  
</myqtt>
