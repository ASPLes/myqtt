--== Features ==--

* Designed as a reusable library that allows to start several
  context into the same process or the provide client or server
  support to an existing application.

* It is multi-threaded.

--== roadmap ==--

* Add wildcard support (for message retention too).

* Big message support (review and strenghten current limits).

* High load support (review and strenghten current limits).

* Add support for cluster support

--== things that should be reviewed ==--

* Remove references to ppath concept inside myqttd

* Limit subscription size somehow. It could be a memory problem.

* Make client library to try to connect with 3.1.1 and if it fails, with 
  3.1.

* Disable wildcard subscription for certain users.

* After publishing first or second release, make the way to have myqtt
  listed under: http://mqtt.org/wiki/doku.php/server_support

* Limit utf-8 strings to avoid memory consumption. It makes no sense
  to have a username or password with 64K long (or the client
  identifier).

* Add support for will message storage (through external handler).

* Ensure support for:
  http://jpmens.net/2013/02/25/lots-of-messages-mqtt-pub-sub-and-the-mosquitto-broker/

* Ensure support for:
  http://www.hardill.me.uk/wordpress/2013/03/24/d3-mqtt-tree-visualiser-updated/
  http://test.mosquitto.org/sys/

* Ensure support to limit persistent messages duration for persistent
  clients:
  https://groups.google.com/d/msg/mqtt/fjVNfZJ46dI/p_F7DG5SBsIJ

* Review and provide support for message ordering differences:
  https://groups.google.com/forum/#!msg/mqtt/UfcO0HtLq9s/cjboTzdoR64J

* Review and provide support to limit that certain user or client id can 
  publish messages in all topics while others don't.
  https://groups.google.com/forum/#!msg/mqtt/t9a9cSfPNns/S9IyJo5GYYMJ

* Some way of dynamically configuring/starting/stopping bridges, either
  via messages or via files (a directory watched by the daemon).

* More hooks to implement via plugin system, hook on store messages,
  hook on send message, hook on receive message.

* External storage like some kind of "casssandra connector"

* Think handling load is key for the IoT ....if we can get say 250 000
  concurrent connections on a single server that would really help - 500 000
  would be epic.

* BIG options is router - allowing device to be route to dedicated mosquitto
  broker - diff to clustering :)...clustering is complex, routing is easy
 
* Rules engine for routing in-comming message

* MONITORING options - keeping an eye on load and troughput for tests and
  support.

* Review http://www.aspl.es/docs/SIOTPostProceedings.pdf



